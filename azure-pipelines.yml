# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  name: 'Default' # Replace Default with the name of your agent pool if you used a different pool

variables:
  buildConfiguration: 'Release'
  PYTHON: 'C:\Python311\python.exe' # Set this to the correct Python path for node-gyp

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 6.x'
  inputs:
    packageType: sdk
    version: '6.x'

# Step to clean node_modules directory (Windows-compatible command with check for existence)
- powershell: |
    if (Test-Path -Path node_modules) {
        Remove-Item -Recurse -Force node_modules
    }
  displayName: 'Clean node_modules'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

# Step to rebuild node-sass to ensure compatibility
- script: 'npm rebuild node-sass'
  displayName: 'Rebuild node-sass'

- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

# Run gulp tasks using the local gulp installation
- script: './node_modules/.bin/gulp'
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project'
  inputs:
    command: 'publish'
    arguments: '--no-restore --configuration Release --output $(Build.ArtifactStagingDirectory)'
    projects: '**/*.csproj'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
